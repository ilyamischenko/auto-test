name: Run autotests

on:
  workflow_dispatch:
    inputs:
      deployment_target:
        description: Select tests to run
        required: true
        type: choice
        default: all
        options:
          - all

jobs:
  run-tests:
    runs-on: ubuntu-latest
    name: Tests
    steps:
      - name: Copy source code
        uses: actions/checkout@v4

      - name: Set up Python env
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y wget gnupg2
          wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run tests and generate XML report
        run: |
          set -e  # Остановить выполнение при ошибке
          pytest -v --junitxml=pytest-results.xml  # Генерация XML-отчета

      - name: Check for test results
        run: |
          if [ -f pytest-results.xml ]; then
            echo "Test results found."
          else
            echo "No test results found!"
            exit 1  # Завершить работу с ошибкой
          fi

      - name: Archive test results
        if: always()  # Загружаем артефакт в любом случае, даже если тесты прошли успешно
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results
          path: pytest-results.xml  # Путь к сгенерированному XML-файлу
